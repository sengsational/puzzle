Showing my Java sofa-king approach to things, but it solves the puzzle. It's a 3 stage solution.  First it randomly tries three numbers and if they add to 38, keep it.  When I quit finding new ones, it moves on to stage 2, which is to assemble those into a "ring" such that the last digit in the last entry matches the first digit in the first entry (the ring works).  Again, I keep making those randomly until it's not very productive any more (no new solutions).  Then stage 3, I take the remaining digits (there's only 7 of them), and drop those randomly. I keep trying that until the solution is found (there's only one, not counting rotation and reflection), or I tried "too many times", in which case I move to the next of the ring solutions I'd saved earlier.  It's possible the program runs and doesn't come up with a solution.  I've tuned the counts / retries such that one run is usually all it takes to find the solution. 